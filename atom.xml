<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xxz6.github.io</id>
    <title>Gridea</title>
    <updated>2020-06-12T14:25:34.520Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://xxz6.github.io"/>
    <link rel="self" href="https://xxz6.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://xxz6.github.io/images/avatar.png</logo>
    <icon>https://xxz6.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[python+笔记]]></title>
        <id>https://xxz6.github.io/post/pythonbi-ji/</id>
        <link href="https://xxz6.github.io/post/pythonbi-ji/">
        </link>
        <updated>2020-06-09T17:14:58.000Z</updated>
        <content type="html"><![CDATA[<p>count = len( open('123.txt', 'r', encoding='utf-8').readlines())  # 查询txt行用的<br>
print(count)<br>
f = open('123.txt','r',encoding='utf-8')  # 查询txt行用的<br>
line = 0<br>
for x in f:<br>
line += 1<br>
print(line)<br>
#读text文件到将每一行文件加入到list中https://www.cnblogs.com/youyou0/p/8921719.html<br>
data = []<br>
for line in open(&quot;data.txt&quot;,&quot;r&quot;): #设置文件对象并读取每一行文件<br>
data.append(line)               #将每一行文件加入到list中</p>
<p>#从末尾开始读txt<br>
with open(&quot;abcd.txt&quot;) as f:<br>
a = reversed(f.readlines())<br>
for line in a:<br>
print(line.strip())</p>
<p>#播放音乐<br>
import pygame<br>
file = r'D:\yyyy\Music\Bandari - One Day in Spring.mp3'<br>
pygame.mixer.init()<br>
print('正在播放', file)<br>
track = pygame.mixer.music.load(file)<br>
pygame.mixer.music.play()<br>
time.sleep(30)<br>
pygame.mixer.music.stop()</p>
<p>以下是移动的四种方式<br>
1.移动到元素element对象的“底端”与当前窗口的“底部”对齐<br>
driver.execute_script(&quot;arguments[0].scrollIntoView(false);&quot;,element)<br>
2.移动到元素element对象的“顶端”与当前窗口的“顶部”对齐<br>
driver.execute_script(&quot;arguments[0].scrollIntoView();&quot;,element)<br>
3.移动到页面底部<br>
driver.execute_script(&quot;window.scrollTo(0,document.body.scrollHeight)&quot;)<br>
4.移动到页面顶部<br>
driver.execute_script(&quot;window.scrollTo(0,document.body.scrollHeight，0)&quot;)</p>
<p>text文件操作规范<br>
#w 只能操作写入 r 只能读取 a 向文件追加<br>
#w+ 可读可写 r+可读可写 a+可读可追加<br>
#wb+写入进制数据<br>
#w模式打开文件，如果而文件中有数据，再次写入内容，会把原来的覆盖掉</p>
<h1 id="tex写">tex写</h1>
<p>def write_text(category, sub_category, book1, text):<br>
with open('小说/{0}-{1}-{2}.txt'.format(category, sub_category, book1), 'w', encoding='utf-8') as f:<br>
f.write(text)</p>
<p>#遍历文件夹个数<br>
file_count=0<br>
for dirpath, dirnames, filenames in os.walk(r'待分析目录'):<br>
for file in filenames:<br>
file_count=file_count+1<br>
#统计文件夹个数</p>
<h1 id="path-osgetcwd-获取当前路径">path = os.getcwd()    # 获取当前路径</h1>
<p>count = 0<br>
for root, dirs, files in os.walk(r'xin\1'):    # 遍历统计<br>
for each in files:<br>
count += 1   # 统计文件夹下文件个数<br>
print(count)</p>
<p>#最大等待时间每次间隔0.5秒发送<br>
driver.implicitly_wait(5)<br>
#字符串操作#https://blog.csdn.net/u010194453/article/details/92099700<br>
import re<br>
inputStr=“hello python,ni hao c,zai jian python 中国”<br>
replaceStr=re.sub(r&quot;[\u4e00-\u9fff]+&quot;,&quot;&quot;,inputStr)<br>
print (replaceStr)<br>
1<br>
2<br>
3<br>
4<br>
输出：<br>
hello python,ni hao c,zai jian python</p>
<p>flags，匹配模式，可以使用按位或‘|‘表示同时生效，也可以在正则表达式中指定。<br>
re.I忽略大小写<br>
re.L表示特殊字符集\w,\W,\b,\B,\s,\S<br>
re.M表示多行模式<br>
re.S ‘.’包括换行符在内的任意字符<br>
re.U表示特殊字符集\w,\W,\b,\B,\d,\D,\s,\D<br>
#如果上面看不懂还可以看这位up主https://blog.csdn.net/lovemianmian/article/details/8867613?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase</p>
<p>str = ’0123456789′<br>
print str[0:3] #截取第一位到第三位的字符<br>
print str[:] #截取字符串的全部字符<br>
print str[6:] #截取第七个字符到结尾<br>
print str[:-3] #截取从头开始到倒数第三个字符之前<br>
print str[2] #截取第三个字符<br>
print str[-1] #截取倒数第一个字符<br>
print str[::-1] #创造一个与原字符串顺序相反的字符串<br>
print str[-3:-1] #截取倒数第三位与倒数第一位之前的字符<br>
print str[-3:] #截取倒数第三位到结尾<br>
print str[:-5:-3] #逆序截取，具体啥意思没搞明白？</p>
<p>#xlsx自动换行写入<br>
import pandas as pd<br>
df=pd.DataFrame([1,2,3,4,5,6,7])<br>
df.to_excel(r'e:\abcd.xlsx', columns=None,header=False,index=False)</p>
<p>#检测字符串重复次数</p>
<h1 id="aa-cc">aa = ('c?c')</h1>
<h1 id="cc-aacount">cc = aa.count('?')</h1>
<h1 id="printcc">print(cc)</h1>
<p>#xlsx根据行位置读取表格<br>
xls = pd.ExcelFile('ccc.xlsx')<br>
df = xls.parse(skiprows=4, usecols=[1], index_col=None)<br>
df_li = df.values.tolist()</p>
<p>#写入xlsx的最简单方式#也可以参考此博主https://www.jianshu.com/p/19219542bf23<br>
from pandas import DataFrame<br>
han = ([<br>
[123, 12],<br>
[1213, 12],<br>
[123, 12],</p>
<p>])<br>
df = DataFrame(han)<br>
df.to_excel('ccc.xlsx')</p>
<p>#筛选xlsx的列##########这里有更详细的教程https://blog.csdn.net/yiyele/article/details/80605909<br>
import pandas as pd<br>
df = pd.read_excel(r&quot;ccc.xlsx&quot;, delimiter=&quot;,&quot;, usecols=(0, 2)) #传入的 usecols必须是字典型最少两个起步, 的索引必须是数字    中括号兼容小括号而且可以一个起步; 中括号还可以写列名到字典里面<br>
print(df)</p>
<p>#用非 筛选xlsx的列不要的值<br>
df = pd.read_excel(r&quot;ccc.xlsx&quot;, delimiter=&quot;,&quot;, usecols=[2, 3])  # 读取项目名称列,不要列名<br>
df_li = df.loc[(df['cc'] != 2)]<br>
print(df_li)</p>
<p>用与、或、非三个条件配合大于、小于、等于对数据进行筛选，并进行计数和求和。</p>
<p>1、使用“与”进行筛选<br>
df_inner.loc[(df_inner['age'] &gt; 25) &amp; (df_inner['city'] == 'beijing'), ['id','city','age','category','gender']]<br>
1<br>
2、使用“或”进行筛选<br>
df_inner.loc[(df_inner['age'] &gt; 25) | (df_inner['city'] == 'beijing'), ['id','city','age','category','gender']].sort(['age'])<br>
1<br>
3、使用“非”条件进行筛选<br>
df_inner.loc[(df_inner['city'] != 'beijing'), ['id','city','age','category','gender']].sort(['id'])<br>
1<br>
4、对筛选后的数据按city列进行计数<br>
df_inner.loc[(df_inner['city'] != 'beijing'), ['id','city','age','category','gender']].sort(['id']).city.count()<br>
1<br>
5、使用query函数进行筛选<br>
df_inner.query('city == [&quot;beijing&quot;, &quot;shanghai&quot;]')<br>
1<br>
6、对筛选后的结果按prince进行求和<br>
df_inner.query('city == [&quot;beijing&quot;, &quot;shanghai&quot;]').price.sum()</p>
<p>#获取网页标签文字<br>
https://blog.csdn.net/qq_38251616/article/details/79278890</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[人脸解锁]]></title>
        <id>https://xxz6.github.io/post/ren-lian-jie-suo/</id>
        <link href="https://xxz6.github.io/post/ren-lian-jie-suo/">
        </link>
        <updated>2020-06-09T08:41:02.000Z</updated>
        <content type="html"><![CDATA[<p>争取早日学会这位博主发的内容</p>
<p>https://blog.csdn.net/weixin_46089319/article/details/105948827</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[今天终于学会搞切片xlsx表格的列开心(　o=^•ェ•)o　┏━┓]]></title>
        <id>https://xxz6.github.io/post/jin-tian-zhong-yu-xue-hui-gao-qie-pian-xlsx-biao-ge-de-lie-kai-xin-oeo-/</id>
        <link href="https://xxz6.github.io/post/jin-tian-zhong-yu-xue-hui-gao-qie-pian-xlsx-biao-ge-de-lie-kai-xin-oeo-/">
        </link>
        <updated>2020-06-07T09:56:57.000Z</updated>
        <content type="html"><![CDATA[<p>import pandas as pd</p>
<p>df = pd.read_excel(r&quot;ccc.xlsx&quot;, delimiter=&quot;,&quot;, usecols=(1,2,3))<br>
print(df)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[你好啊!]]></title>
        <id>https://xxz6.github.io/post/ni-hao-a/</id>
        <link href="https://xxz6.github.io/post/ni-hao-a/">
        </link>
        <updated>2020-05-29T11:19:45.000Z</updated>
        <summary type="html"><![CDATA[<p>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈😏</p>
]]></summary>
        <content type="html"><![CDATA[<p>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈😏</p>
<!-- more -->
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://xxz6.github.io/post/hello-gridea/</id>
        <link href="https://xxz6.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>